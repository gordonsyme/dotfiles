__gordon_d() {
  local cur prev opts
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

  opts="ps logs stop"

  case "${prev}" in
    logs)
      __docker_complete_container_names
      return 0
      ;;

    stop)
      __docker_complete_container_names
      return 0
      ;;

    *)
    ;;
  esac

  COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
  return 0
}
complete -F __gordon_d d

__gordon_dc() {
  COMPREPLY=()
  local cur prev words cword opts
  _get_comp_words_by_ref -n : cur prev words cword

  local commands="up down"

  local counter=1 command=''
  while [ ${counter} -lt ${cword} ]; do
    case "${words[$counter]}" in
      up)
        command="up"
        break
      ;;
      down)
        command="down"
        break
      ;;
    esac
  done

  case "${command}" in
    up)
      local _flags=()
      if [ "${prev}" == "${command}" ]; then
        _flags+=( "-d" )
      fi

      local _services=()
      if [ -e "./docker-compose.yml" ]; then
        _services=$(python -c "import yaml; print ' '.join(service for service in yaml.load(open('./docker-compose.yml')).get('services').keys())")
      fi

      local _complete_options=( "${_flags[@]}" "${_services[@]}" )
      COMPREPLY=($(compgen -W "${_complete_options[*]}" -- ${cur}))
      return 0
    ;;

    *)
    ;;
  esac

  COMPREPLY=($(compgen -W "${commands}" -- ${cur}))
  return 0
}
complete -F __gordon_dc dc
